[tool.poetry]
name = "stratified-models"
version = "0.1.0"
authors = ["Tom Shlomo <tomshlomo@gmail.com>"]
readme = "README.md"
packages = [{ include = "stratified_models" }]
description = "A python package for training stratified machine learning models with laplacian regularization"
license = "MIT"
homepage = "https://github.com/tomshlomo/stratified-models"
repository = "https://github.com/tomshlomo/stratified-models"
keywords = ["startification", "laplacian regularization", "machine learning"]


[tool.poetry.dependencies]
python = "^3.9"
importlib-metadata = { version = "^5.2.0", python = "<3.8" }
networkx = "^2.8.8"
pandas = "^1.5.2"
cvxpy = "^1.3.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
coverage = { version = "^7.0.1", extras = ["toml"] }
black = "^22.12.0"
flake8 = "^6.0.0"
flake8-import-order = "^0.18.2"
mypy = "^0.991"
typeguard = "^2.13.3"
pytest-pycharm = "^0.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.paths]
source = ["stratified_models", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["stratified_models"]

[tool.coverage.report]
show_missing = true
fail_under = 100
#exclude_lines = [
#    'pragma: no cover',
#    'def __repr__',
#    'if self.debug:',
#    'if settings.DEBUG',
#    'raise AssertionError',
#    'raise NotImplementedError',
#    'if 0:',
#    'if __name__ == .__main__.:',
#    'class .*\bProtocol\):',
#    '@(abc\.)?abstractmethod',
#]

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "pytest",
    "nox_poetry",
]
ignore_missing_imports = true

[tool.isort]
profile = "black"
